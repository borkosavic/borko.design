---
---

<form id="contact-form" class="space-y-6">
  <div>
    <label for="name" class="block text-sm font-medium text-gray-700">Name</label>
    <input
      type="text"
      name="name"
      id="name"
      required
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-500 focus:ring-gray-500"
    />
  </div>

  <div>
    <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
    <input
      type="email"
      name="email"
      id="email"
      required
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-500 focus:ring-gray-500"
    />
  </div>

  <div>
    <label for="message" class="block text-sm font-medium text-gray-700">Message</label>
    <textarea
      name="message"
      id="message"
      rows="4"
      required
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-500 focus:ring-gray-500"
    ></textarea>
  </div>

  <button
    type="submit"
    class="inline-flex justify-center rounded-md border border-transparent bg-gray-900 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 disabled:opacity-50"
  >
    Send Message
  </button>

  <div id="form-status" class="hidden">
    <p class="text-green-600 success hidden">Message sent successfully!</p>
    <p class="text-red-600 error hidden">There was an error sending your message.</p>
  </div>
</form>

<script>
  const form = document.getElementById('contact-form') as HTMLFormElement;
  const formStatus = document.getElementById('form-status');
  const successMessage = formStatus?.querySelector('.success');
  const errorMessage = formStatus?.querySelector('.error');

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const button = form.querySelector('button');
    if (button) button.disabled = true;

    try {
      const formData = new FormData(form);
      const response = await fetch(import.meta.env.PUBLIC_CONTACT_FORM_ENDPOINT, {
        method: 'POST',
        body: formData,
      });

      if (!response.ok) throw new Error('Network response was not ok');

      if (formStatus && successMessage) {
        formStatus.classList.remove('hidden');
        successMessage.classList.remove('hidden');
        form.reset();
      }
    } catch (error) {
      if (formStatus && errorMessage) {
        formStatus.classList.remove('hidden');
        errorMessage.classList.remove('hidden');
      }
    } finally {
      if (button) button.disabled = false;
    }
  });
</script>